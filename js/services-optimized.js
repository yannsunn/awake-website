/**
 * „Çµ„Éº„Éì„Çπ„Éö„Éº„Ç∏ÊúÄÈÅ©ÂåñÁµ±ÂêàJavaScript
 * „Éà„ÉÉ„Éó„Éö„Éº„Ç∏ÂìÅË≥™„É¨„Éô„É´„ÅÆ„Ç§„É≥„Çø„É©„ÇØ„Ç∑„Éß„É≥„ÇíÊèê‰æõ
 */

class ServicesOptimized {
    constructor() {
        this.init();
    }

    init() {
        // DOMË™≠„ÅøËæº„ÅøÂÆå‰∫ÜÂæå„Å´ÂÆüË°å
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.setupAll());
        } else {
            this.setupAll();
        }
    }

    setupAll() {
        this.setupSmoothScroll();
        this.setupScrollReveal();
        this.setupMobileMenu();
        this.setupGlassEffects();
        this.setupLazyLoading();
        this.setupServiceNavigation();
        this.setupFormOptimization();
        this.setupPerformanceOptimization();
    }

    // === „Çπ„É†„Éº„Çπ„Çπ„ÇØ„É≠„Éº„É´ === //
    setupSmoothScroll() {
        const links = document.querySelectorAll('a[href^="#"]');
        
        links.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                
                const targetId = link.getAttribute('href').substring(1);
                const targetElement = document.getElementById(targetId);
                
                if (targetElement) {
                    const headerHeight = document.querySelector('.header')?.offsetHeight || 0;
                    const targetPosition = targetElement.offsetTop - headerHeight - 20;
                    
                    window.scrollTo({
                        top: targetPosition,
                        behavior: 'smooth'
                    });
                }
            });
        });
    }

    // === „Çπ„ÇØ„É≠„Éº„É´ÊôÇ„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ === //
    setupScrollReveal() {
        const observerOptions = {
            root: null,
            rootMargin: '0px 0px -100px 0px',
            threshold: 0.1
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('revealed');
                    // „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÂêë‰∏ä„ÅÆ„Åü„ÇÅ„ÄÅ‰∏ÄÂ∫¶Ë°®Á§∫„Åï„Çå„Åü„ÇâÁõ£Ë¶ñ„ÇíÂÅúÊ≠¢
                    observer.unobserve(entry.target);
                }
            });
        }, observerOptions);

        // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂØæË±°Ë¶ÅÁ¥†„ÇíË®≠ÂÆö
        const revealElements = document.querySelectorAll(
            '.glass-card, .feature-card, .pricing-card, .portfolio-item, .timeline-item'
        );

        revealElements.forEach((el, index) => {
            el.classList.add('scroll-reveal');
            // ÊÆµÈöéÁöÑ„Å™Ë°®Á§∫„ÅÆ„Åü„ÇÅ„ÅÆÈÅÖÂª∂
            el.style.transitionDelay = `${index * 0.1}s`;
            observer.observe(el);
        });
    }

    // === „É¢„Éê„Ç§„É´„É°„Éã„É•„Éº === //
    setupMobileMenu() {
        const menuToggle = document.querySelector('.header__menu-toggle');
        const nav = document.querySelector('.header__nav');
        
        if (menuToggle && nav) {
            menuToggle.addEventListener('click', () => {
                const isOpen = nav.classList.contains('is-open');
                
                if (isOpen) {
                    nav.classList.remove('is-open');
                    menuToggle.setAttribute('aria-expanded', 'false');
                    menuToggle.querySelector('.hamburger-icon').textContent = '‚ò∞';
                } else {
                    nav.classList.add('is-open');
                    menuToggle.setAttribute('aria-expanded', 'true');
                    menuToggle.querySelector('.hamburger-icon').textContent = '‚úï';
                }
            });

            // „É°„Éã„É•„ÉºÂ§ñ„ÇØ„É™„ÉÉ„ÇØ„ÅßÈñâ„Åò„Çã
            document.addEventListener('click', (e) => {
                if (!menuToggle.contains(e.target) && !nav.contains(e.target)) {
                    nav.classList.remove('is-open');
                    menuToggle.setAttribute('aria-expanded', 'false');
                    menuToggle.querySelector('.hamburger-icon').textContent = '‚ò∞';
                }
            });
        }
    }

    // === „Ç¨„É©„ÇπÂäπÊûú„ÅÆÂº∑Âåñ === //
    setupGlassEffects() {
        const glassCards = document.querySelectorAll('.glass-card');
        
        glassCards.forEach(card => {
            // „Éû„Ç¶„ÇπËøΩÂæìÂäπÊûú
            card.addEventListener('mousemove', (e) => {
                const rect = card.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                const centerX = rect.width / 2;
                const centerY = rect.height / 2;
                
                const rotateX = (y - centerY) / 10;
                const rotateY = (centerX - x) / 10;
                
                card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(10px)`;
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) translateZ(0px)';
            });
        });
    }

    // === ÈÅÖÂª∂Ë™≠„ÅøËæº„Åø === //
    setupLazyLoading() {
        const lazyImages = document.querySelectorAll('img[loading="lazy"]');
        
        if ('IntersectionObserver' in window) {
            const imageObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        img.classList.add('loaded');
                        imageObserver.unobserve(img);
                    }
                });
            });

            lazyImages.forEach(img => {
                img.classList.add('lazy-load');
                imageObserver.observe(img);
            });
        } else {
            // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ
            lazyImages.forEach(img => img.classList.add('loaded'));
        }
    }

    // === „Çµ„Éº„Éì„ÇπÈñì„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ === //
    setupServiceNavigation() {
        // „Çµ„Éº„Éì„ÇπÈñì„ÅÆÁßªÂãï„ÇíÁ∞°Âçò„Å´„Åô„Çã„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥
        const currentService = this.getCurrentService();
        const services = [
            { path: '/services/web/', name: 'HPÂà∂‰Ωú„ÉªLPÂà∂‰Ωú', icon: 'üåê' },
            { path: '/services/ec/', name: 'ECÈÄöË≤©', icon: 'üõí' },
            { path: '/services/video/', name: 'ÂãïÁîªÁ∑®ÈõÜ', icon: 'üé¨' },
            { path: '/services/furniture/', name: 'ÂÆ∂ÂÖ∑Ë£Ω‰Ωú', icon: 'ü™ë' }
        ];

        // Èñ¢ÈÄ£„Çµ„Éº„Éì„Çπ„ÅÆÊèêÊ°à
        const relatedServices = services.filter(service => 
            !window.location.pathname.includes(service.path.replace('/services/', '').replace('/', ''))
        );

        // „Éï„ÉÉ„Çø„ÉºÂâç„Å´Èñ¢ÈÄ£„Çµ„Éº„Éì„Çπ„Çª„ÇØ„Ç∑„Éß„É≥„ÇíËøΩÂä†
        this.addRelatedServicesSection(relatedServices);
    }

    getCurrentService() {
        const path = window.location.pathname;
        if (path.includes('/web/')) return 'web';
        if (path.includes('/ec/')) return 'ec';
        if (path.includes('/video/')) return 'video';
        if (path.includes('/furniture/')) return 'furniture';
        return null;
    }

    addRelatedServicesSection(services) {
        const footer = document.querySelector('.footer');
        if (!footer || services.length === 0) return;

        const relatedSection = document.createElement('section');
        relatedSection.className = 'related-services section';
        relatedSection.innerHTML = `
            <div class="container">
                <div class="section-header">
                    <h2 class="section-title gradient-text">„Åù„ÅÆ‰ªñ„ÅÆ„Çµ„Éº„Éì„Çπ</h2>
                    <p class="section-subtitle">„ÅäÂÆ¢Êßò„ÅÆ„Éì„Ç∏„Éç„Çπ„Çí„Éà„Éº„Çø„É´„Çµ„Éù„Éº„Éà</p>
                </div>
                <div class="related-grid">
                    ${services.map(service => `
                        <a href="${service.path}" class="related-card glass-card">
                            <div class="related-icon">${service.icon}</div>
                            <h3 class="related-title">${service.name}</h3>
                            <div class="related-arrow">‚Üí</div>
                        </a>
                    `).join('')}
                </div>
            </div>
        `;

        footer.parentNode.insertBefore(relatedSection, footer);
    }

    // === „Éï„Ç©„Éº„É†ÊúÄÈÅ©Âåñ === //
    setupFormOptimization() {
        const forms = document.querySelectorAll('form');
        
        forms.forEach(form => {
            const inputs = form.querySelectorAll('input, textarea, select');
            
            inputs.forEach(input => {
                // „Éï„Ç©„Éº„Ç´„ÇπÂäπÊûú
                input.addEventListener('focus', () => {
                    input.parentElement.classList.add('focused');
                });
                
                input.addEventListener('blur', () => {
                    input.parentElement.classList.remove('focused');
                    if (input.value) {
                        input.parentElement.classList.add('filled');
                    } else {
                        input.parentElement.classList.remove('filled');
                    }
                });
                
                // „É™„Ç¢„É´„Çø„Ç§„É†„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
                input.addEventListener('input', () => {
                    this.validateInput(input);
                });
            });
        });
    }

    validateInput(input) {
        const value = input.value.trim();
        const type = input.type;
        const required = input.hasAttribute('required');
        
        let isValid = true;
        
        if (required && !value) {
            isValid = false;
        } else if (type === 'email' && value) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            isValid = emailRegex.test(value);
        } else if (type === 'tel' && value) {
            const phoneRegex = /^[\d\-\+\(\)\s]+$/;
            isValid = phoneRegex.test(value);
        }
        
        input.parentElement.classList.toggle('error', !isValid);
        input.parentElement.classList.toggle('valid', isValid && value);
    }

    // === „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊúÄÈÅ©Âåñ === //
    setupPerformanceOptimization() {
        // „Éö„Éº„Ç∏„É≠„Éº„ÉâÂÆå‰∫ÜÂæå„ÅÆÊúÄÈÅ©Âåñ
        window.addEventListener('load', () => {
            // „É≠„Éº„Éá„Ç£„É≥„Ç∞„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇíÂâäÈô§
            const loader = document.querySelector('.page-loader');
            if (loader) {
                loader.classList.add('hide');
                setTimeout(() => loader.remove(), 500);
            }
            
            // Èùû„ÇØ„É™„ÉÜ„Ç£„Ç´„É´„Å™„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇíÊúâÂäπÂåñ
            document.body.classList.add('animations-enabled');
        });

        // „Çπ„ÇØ„É≠„Éº„É´„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅÆÊúÄÈÅ©Âåñ
        let ticking = false;
        
        window.addEventListener('scroll', () => {
            if (!ticking) {
                requestAnimationFrame(() => {
                    this.handleScroll();
                    ticking = false;
                });
                ticking = true;
            }
        });
    }

    handleScroll() {
        const scrolled = window.pageYOffset;
        const rate = scrolled * -0.5;
        
        // „Éë„É©„É©„ÉÉ„ÇØ„ÇπÂäπÊûúÔºà„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÇíËÄÉÊÖÆ„Åó„Å¶ËªΩÈáèÂåñÔºâ
        const heroElements = document.querySelectorAll('.page-hero::before');
        heroElements.forEach(el => {
            if (scrolled < window.innerHeight) {
                el.style.transform = `translateY(${rate}px)`;
            }
        });
        
        // „Éò„ÉÉ„ÉÄ„Éº„ÅÆÈÄèÊòéÂ∫¶Ë™øÊï¥
        const header = document.querySelector('.header');
        if (header) {
            if (scrolled > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        }
    }
}

// === CSSÂãïÁöÑ„Çπ„Çø„Ç§„É´ËøΩÂä† === //
const addDynamicStyles = () => {
    const style = document.createElement('style');
    style.textContent = `
        .related-services {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        }
        
        .related-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }
        
        .related-card {
            padding: 2rem 1.5rem;
            text-align: center;
            text-decoration: none;
            color: var(--color-text);
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }
        
        .related-card:hover {
            transform: translateY(-5px);
            border-color: var(--color-primary);
        }
        
        .related-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
        
        .related-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 1rem;
        }
        
        .related-arrow {
            font-size: 1.5rem;
            opacity: 0.7;
            transition: transform 0.3s ease;
        }
        
        .related-card:hover .related-arrow {
            transform: translateX(5px);
        }
        
        .header.scrolled {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
        }
        
        .form-group.focused .form-label {
            color: var(--color-primary);
            transform: translateY(-5px);
        }
        
        .form-group.error input,
        .form-group.error textarea {
            border-color: #e74c3c;
        }
        
        .form-group.valid input,
        .form-group.valid textarea {
            border-color: #27ae60;
        }
        
        @media (max-width: 768px) {
            .related-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 1rem;
            }
            
            .related-card {
                padding: 1.5rem 1rem;
            }
        }
    `;
    document.head.appendChild(style);
};

// === ÂàùÊúüÂåñ === //
document.addEventListener('DOMContentLoaded', () => {
    addDynamicStyles();
    new ServicesOptimized();
});

// „Çµ„Éº„Éì„Çπ„Éö„Éº„Ç∏Âà§ÂÆö„Å®„ÇØ„É©„ÇπËøΩÂä†
const addServicePageClass = () => {
    const path = window.location.pathname;
    const body = document.body;
    
    if (path.includes('/web/')) body.classList.add('web-page');
    else if (path.includes('/ec/')) body.classList.add('ec-page');
    else if (path.includes('/video/')) body.classList.add('video-page');
    else if (path.includes('/furniture/')) body.classList.add('furniture-page');
};

addServicePageClass();