// Page Loader
(function() {
  window.addEventListener('load', function() {
    const loader = document.querySelector('.page-loader');
    if (loader) {
      setTimeout(() => {
        loader.classList.add('hide');
      }, 500);
    }
  });
})();

// Mobile menu functionality
(function() {
  const menuToggle = document.querySelector('.header__menu-toggle');
  const nav = document.querySelector('.header__nav');
  
  if (menuToggle && nav) {
    menuToggle.addEventListener('click', function() {
      const isOpen = nav.classList.contains('is-open');
      nav.classList.toggle('is-open');
      menuToggle.setAttribute('aria-expanded', !isOpen);
      
      // Close menu when clicking nav links
      const navLinks = nav.querySelectorAll('a');
      navLinks.forEach(link => {
        link.addEventListener('click', () => {
          nav.classList.remove('is-open');
          menuToggle.setAttribute('aria-expanded', 'false');
        });
      });
    });
  }
})();

// Counter Animation
(function() {
  const counters = document.querySelectorAll('.counter');
  const speed = 200;
  
  const animateCounter = (counter) => {
    const target = +counter.parentElement.getAttribute('data-target');
    const increment = target / speed;
    let current = 0;
    
    const updateCounter = () => {
      current += increment;
      if (current < target) {
        counter.textContent = Math.ceil(current);
        requestAnimationFrame(updateCounter);
      } else {
        counter.textContent = target;
      }
    };
    
    updateCounter();
  };
  
  const observerOptions = {
    threshold: 0.5,
    rootMargin: '0px'
  };
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        animateCounter(entry.target);
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);
  
  counters.forEach(counter => {
    observer.observe(counter);
  });
})();

// Testimonials Carousel
(function() {
  const testimonials = document.querySelectorAll('.testimonial-card');
  const indicators = document.querySelectorAll('.indicator');
  let currentSlide = 0;
  
  const showSlide = (index) => {
    testimonials.forEach((testimonial, i) => {
      testimonial.classList.toggle('active', i === index);
    });
    indicators.forEach((indicator, i) => {
      indicator.classList.toggle('active', i === index);
    });
  };
  
  indicators.forEach((indicator, index) => {
    indicator.addEventListener('click', () => {
      currentSlide = index;
      showSlide(currentSlide);
    });
  });
  
  // Auto-rotate carousel
  setInterval(() => {
    currentSlide = (currentSlide + 1) % testimonials.length;
    showSlide(currentSlide);
  }, 5000);
})();

// スクロールアニメーション（.fade-in, .slide-up）
(function() {
  // Intersection Observer for scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };
  
  const scrollObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('is-visible');
        scrollObserver.unobserve(entry.target);
      }
    });
  }, observerOptions);
  
  // Observe all scroll-triggered elements
  const scrollElements = document.querySelectorAll('.scroll-fade-in, .scroll-scale-in, .js-scroll-anim, .stagger-fade-in');
  scrollElements.forEach(el => {
    scrollObserver.observe(el);
  });
  
  // Legacy scroll animation function
  function onScrollAnim() {
    var elems = document.querySelectorAll('.fade-in, .slide-up');
    var trigger = window.innerHeight * 0.85;
    elems.forEach(function(el) {
      var rect = el.getBoundingClientRect();
      if (rect.top < trigger) {
        el.classList.add('visible', 'is-visible');
      }
    });
  }
  window.addEventListener('scroll', onScrollAnim);
  document.addEventListener('DOMContentLoaded', onScrollAnim);
})(); 